<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jaylu2018.github.io/"/>
  <updated>2019-04-07T13:56:24.301Z</updated>
  <id>https://jaylu2018.github.io/</id>
  
  <author>
    <name>Falco</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python基础</title>
    <link href="https://jaylu2018.github.io/2019/02/06/python%E5%9F%BA%E7%A1%80/"/>
    <id>https://jaylu2018.github.io/2019/02/06/python基础/</id>
    <published>2019-02-06T12:25:00.000Z</published>
    <updated>2019-04-07T13:56:24.301Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/assets/blogImg/landscape.jpg" alt="Plandscape"></p><blockquote><p>人生苦短 快用Python</p></blockquote><a id="more"></a><h1 id="python简介"><a href="#python简介" class="headerlink" title="python简介"></a>python简介</h1><p>Python是动态类型的高级语言、强类型语言、解释型语言、面向对象语言</p><h2 id="1-Python相关链接"><a href="#1-Python相关链接" class="headerlink" title="1.Python相关链接"></a>1.Python相关链接</h2><h3 id="1-1Python官方文档："><a href="#1-1Python官方文档：" class="headerlink" title="1.1Python官方文档："></a>1.1Python官方文档：</h3><p>Python3：<a href="https://docs.python.org/release/3.7.0/" target="_blank" rel="noopener">https://docs.python.org/release/3.7.0/</a><br>Python2：<a href="https://docs.python.org/release/2.7.15/" target="_blank" rel="noopener">https://docs.python.org/release/2.7.15/</a><br>Python文档全部：<a href="https://www.python.org/doc/versions/" target="_blank" rel="noopener">https://www.python.org/doc/versions/</a></p><h3 id="1-2Python第三方库集合"><a href="#1-2Python第三方库集合" class="headerlink" title="1.2Python第三方库集合:"></a>1.2Python第三方库集合:</h3><p>Python库列表：<a href="https://pypi.org/" target="_blank" rel="noopener">https://pypi.org/</a></p><h3 id="1-3Python学习网站："><a href="#1-3Python学习网站：" class="headerlink" title="1.3Python学习网站："></a>1.3Python学习网站：</h3><p>廖雪峰的官方网站 菜鸟教程</p><h3 id="1-4Python开发工具"><a href="#1-4Python开发工具" class="headerlink" title="1.4Python开发工具"></a>1.4Python开发工具</h3><p>PyCharm、notepad++、sublime text、Xcode</p><h1 id="安装python环境"><a href="#安装python环境" class="headerlink" title="安装python环境"></a>安装python环境</h1><p>Mac 自带python2，但是python2终究要被淘汰。</p><h2 id="2-1Anaconda安装"><a href="#2-1Anaconda安装" class="headerlink" title="2.1Anaconda安装"></a>2.1Anaconda安装</h2><p>Anaconda自带python3环境，推荐安装。由于官网的网速实在太慢，推荐清华大学的镜像下载<br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a><br>安装完Anaconda之后 可以库管理那里添加两个源<br><a href="https://pypi.python.org/simple" target="_blank" rel="noopener">https://pypi.python.org/simple</a><br><a href="https://pypi.mirrors.ustc.edu.cn/simple" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple</a></p><h1 id="python运算符"><a href="#python运算符" class="headerlink" title="python运算符"></a>python运算符</h1><p>Python中运算符分为：<br>1.算术运算符：主要用于两个对象进行四则计算(加减乘除等)<br>2.比较（关系）运算符：用于两个对象比较(判断是否相等、大于等)<br>3.赋值运算符：用于对象的赋值。<br>4.逻辑运算符：用于逻辑运算(与或非等)。<br>5.位运算符： 对Python对象进行按位运算。<br>6.成员运算符：判断一个对象是否包含另一个对象。<br>7.身份运算符：判断是不是引用自一个对象</p><h2 id="3-1运算符优先级"><a href="#3-1运算符优先级" class="headerlink" title="3.1运算符优先级"></a>3.1运算符优先级</h2><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">lambda</td><td style="text-align:center">Lambda 表达式（优先级最低）</td></tr><tr><td style="text-align:center">or</td><td style="text-align:center">布尔“或”</td></tr><tr><td style="text-align:center">and</td><td style="text-align:center">布尔“与”</td></tr><tr><td style="text-align:center">not x</td><td style="text-align:center">布尔“非”</td></tr><tr><td style="text-align:center">in，not in</td><td style="text-align:center">成员测试</td></tr><tr><td style="text-align:center">is，is not</td><td style="text-align:center">同一性测试</td></tr><tr><td style="text-align:center">&lt;，&lt;=，&gt;，&gt;=，!=，==</td><td style="text-align:center">比较</td></tr><tr><td style="text-align:center">竖线</td><td style="text-align:center">按位或</td></tr><tr><td style="text-align:center">^</td><td style="text-align:center">按位异或</td></tr><tr><td style="text-align:center">&amp;</td><td style="text-align:center">按位与</td></tr><tr><td style="text-align:center">&lt;&lt;，&gt;&gt;</td><td style="text-align:center">移位</td></tr><tr><td style="text-align:center">+，-</td><td style="text-align:center">加法与减法</td></tr><tr><td style="text-align:center">*，/，%</td><td style="text-align:center">乘法、除法与取余</td></tr><tr><td style="text-align:center">+x，-x</td><td style="text-align:center">正负号</td></tr><tr><td style="text-align:center">~x</td><td style="text-align:center">按位翻转</td></tr><tr><td style="text-align:center">**</td><td style="text-align:center">指数</td></tr><tr><td style="text-align:center">x.attribute</td><td style="text-align:center">属性参考</td></tr><tr><td style="text-align:center">x[index]</td><td style="text-align:center">下标</td></tr><tr><td style="text-align:center">x[index:index]</td><td style="text-align:center">寻址段</td></tr><tr><td style="text-align:center">f(arguments…)</td><td style="text-align:center">函数调用</td></tr><tr><td style="text-align:center">(experession,…)</td><td style="text-align:center">绑定或元组显示</td></tr><tr><td style="text-align:center">[expression,…]</td><td style="text-align:center">列表显示</td></tr><tr><td style="text-align:center">{key:datum,…}</td><td style="text-align:center">字典显示</td></tr><tr><td style="text-align:center">‘expression,…’（优先级最高）</td><td style="text-align:center">字符串转换</td></tr></tbody></table><h2 id="3-2算术运算符"><a href="#3-2算术运算符" class="headerlink" title="3.2算术运算符"></a>3.2算术运算符</h2><p>一、“ / ”<br>python2及之前，若为两个整形数进行运算，结果为整形，但若两个数中有一个为浮点数，则结果为浮点数；<br>python3以后，”/“为真除法，运算结果不再根据参加运算的数的类型。<br>二、“//”<br>python2.2后引入的“//”，从数值上讲：返回小于除法运算结果的最大整数；从类型上讲，与”/“运算符返回类型逻辑一致。<br><img src="/assets/blogImg/算术运算符.png" alt="算术运算符"></p><h2 id="3-3比较（关系）运算符"><a href="#3-3比较（关系）运算符" class="headerlink" title="3.3比较（关系）运算符"></a>3.3比较（关系）运算符</h2><p>判断比较的结果<br>为真返回true，为假返回false</p><h2 id="3-4赋值运算符"><a href="#3-4赋值运算符" class="headerlink" title="3.4赋值运算符"></a>3.4赋值运算符</h2><p>将一个值赋予一个变量（=）<br>常结合算术运算符使用，如下图</p><table><thead><tr><th style="text-align:center">赋值运算符</th><th style="text-align:center">描述</th><th style="text-align:center">举例</th></tr></thead><tbody><tr><td style="text-align:center">+=</td><td style="text-align:center">加法赋值运算符</td><td style="text-align:center">c += a 等效于 c = c + a</td></tr><tr><td style="text-align:center">-=</td><td style="text-align:center">减法赋值运算符</td><td style="text-align:center">c -= a 等效于 c = c - a</td></tr><tr><td style="text-align:center">*=</td><td style="text-align:center">乘法赋值运算符</td><td style="text-align:center">c <em>= a 等效于 c = c </em>a</td></tr><tr><td style="text-align:center">/=</td><td style="text-align:center">除法赋值运算符</td><td style="text-align:center">c /= a 等效于 c = c / a</td></tr><tr><td style="text-align:center">%=</td><td style="text-align:center">取模赋值运算符</td><td style="text-align:center">c %= a 等效于 c = c % a</td></tr><tr><td style="text-align:center">**=</td><td style="text-align:center">幂赋值运算符</td><td style="text-align:center">c <strong>= a 等效于 c = c </strong>a</td></tr><tr><td style="text-align:center">//=</td><td style="text-align:center">取整除赋值运算符</td><td style="text-align:center">c //= a 等效于 c = c // a</td></tr></tbody></table><h2 id="3-5逻辑运算符"><a href="#3-5逻辑运算符" class="headerlink" title="3.5逻辑运算符"></a>3.5逻辑运算符</h2><p>优先级：() &gt; not &gt; and &gt; or</p><h3 id="3-5-1布尔“与”"><a href="#3-5-1布尔“与”" class="headerlink" title="3.5.1布尔“与”"></a>3.5.1布尔“与”</h3><p>A and B<br>若A为True,返回B<br>若A为False,返回A</p><h3 id="3-5-2布尔“或”"><a href="#3-5-2布尔“或”" class="headerlink" title="3.5.2布尔“或”"></a>3.5.2布尔“或”</h3><p>A or B<br>若A为True,返回A<br>若A为False,返回B</p><h3 id="3-5-3布尔“非”"><a href="#3-5-3布尔“非”" class="headerlink" title="3.5.3布尔“非”"></a>3.5.3布尔“非”</h3><p>not(x)，如果x为True,返回False；如果x为False,返回True；<br>（即，非真为假，非假为真）</p><h2 id="3-6位运算符"><a href="#3-6位运算符" class="headerlink" title="3.6位运算符"></a>3.6位运算符</h2><p>位运算符：python的位运算符是把数字看作二进制来进行计算的。</p><h3 id="3-6-1按位与（-amp-）"><a href="#3-6-1按位与（-amp-）" class="headerlink" title="3.6.1按位与（&amp;）"></a>3.6.1按位与（&amp;）</h3><p>如果两个二进位都为1，则该位结果为1，否则为0</p><h3 id="3-6-2按位或（-）"><a href="#3-6-2按位或（-）" class="headerlink" title="3.6.2按位或（|）"></a>3.6.2按位或（|）</h3><p>只要一个为1，则为1，否则为0</p><h3 id="3-6-3按位异或（-）"><a href="#3-6-3按位异或（-）" class="headerlink" title="3.6.3按位异或（^）"></a>3.6.3按位异或（^）</h3><p>两个二进位相异为为1（即两个二进位要相反），否则为0</p><h3 id="3-6-4取反（-）"><a href="#3-6-4取反（-）" class="headerlink" title="3.6.4取反（~）"></a>3.6.4取反（~）</h3><p>对数据的每个二进制位取反，即把1变0，把0变1</p><h3 id="3-6-5左移动（-lt-lt-）"><a href="#3-6-5左移动（-lt-lt-）" class="headerlink" title="3.6.5左移动（&lt;&lt;）"></a>3.6.5左移动（&lt;&lt;）</h3><p>运算数的各二进位全部向左移若干位，由 &lt;&lt; 右边的数字指定了移动的位数，高位丢弃，低位补0</p><h3 id="3-6-6右移动（-gt-gt-）"><a href="#3-6-6右移动（-gt-gt-）" class="headerlink" title="3.6.6右移动（&gt;&gt;）"></a>3.6.6右移动（&gt;&gt;）</h3><p>把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，&gt;&gt; 右边的数字指定了移动的位数，高位补0，低位丢弃</p><h2 id="3-7成员运算符"><a href="#3-7成员运算符" class="headerlink" title="3.7成员运算符"></a>3.7成员运算符</h2><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">in</td><td style="text-align:center">如果在指定的序列中找到值返回True，否则返回False</td></tr><tr><td style="text-align:center">not in</td><td style="text-align:center">如果在指定的序列中没有找到值返回True，否则返回False</td></tr></tbody></table><h2 id="3-8身份运算符"><a href="#3-8身份运算符" class="headerlink" title="3.8身份运算符"></a>3.8身份运算符</h2><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">举例</th></tr></thead><tbody><tr><td style="text-align:center">is</td><td style="text-align:center">is 是判断两个标识符是不是引用自一个对象</td><td style="text-align:center">x is y, 类似 id(x) == id(y) , 如果引用的是同一个对象则返回 True，否则返回 False</td></tr><tr><td style="text-align:center">is not</td><td style="text-align:center">is not 是判断两个标识符是不是引用自不同对象</td><td style="text-align:center">x is not y ， 类似 id(a) != id(b)。如果引用的不是同一个对象则返回结果 True，否则返回 False。</td></tr></tbody></table><h2 id="3-9Tips"><a href="#3-9Tips" class="headerlink" title="3.9Tips"></a>3.9Tips</h2><h3 id="3-9-1-is和-的区别"><a href="#3-9-1-is和-的区别" class="headerlink" title="3.9.1 is和==的区别"></a>3.9.1 is和==的区别</h3><p>is 用于判断两个变量引用对象是否为同一个， == 用于判断引用变量的值是否相等。</p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>b <span class="token operator">=</span> a<span class="token keyword">print</span><span class="token punctuation">(</span>b <span class="token keyword">is</span> a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b <span class="token operator">==</span> a<span class="token punctuation">)</span>b <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>b <span class="token keyword">is</span> a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b <span class="token operator">==</span> a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogImg/landscape.jpg&quot; alt=&quot;Plandscape&quot;&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;人生苦短 快用Python&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://jaylu2018.github.io/tags/Python/"/>
    
  </entry>
  
</feed>
